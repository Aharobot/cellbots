#summary Web-based protocol for remote robot control.

= Introduction =

In order to provide a richer and more extensible way to control a Cellbot, I am proposing the following high-level protocol for communicating between the bot and a web-based interface.  The goal of the protocol is provide a device independent (on either side of the communication) way to both direct the bot, but also probe the bots onboard sensors and provide feedback that the operator can use to correct for the intended path.  This method would hopefully lead to a framework that supports flexibility and is ideal for prototyping and testing new algorithms as they develop.

= Commands =
----
|| *COMMAND* || *DESCRIPTION* || *PARAMETERS* || *RETURN VALUES* || *NOTES* || *VERSION* ||
|| *FORWARD* or *F* || Moves bot forward. || <± number of meters> || forward_complete | forward_error <error message> | forward_not_supported || FORWARD can accept negative values to propel the bot in reverse || 1 ||
|| *ROTATE* or *R* || Rotates the bot. || <± number of degrees from current heading> || rotate_complete | rotate_error <error message> | rotate_not_supported || ROTATE is specified as positive values in the clockwise direction || 1 ||
|| *ALIGN* or *A* || Aligns the bot to a heading. || <± heading in degrees> || align_complete | align_error <error message> | align_not_supported || ALIGN is specified assuming magnetic north is 0 degrees. || 1 ||
|| *NAVIGATE* or *N* || Initiates autonomous navigation. || <± x displacement in meters> <± y displacement in meters> || navigate_complete | navigate_error <error message> | navigate_not_supported || || 1 ||
|| *SPEAK* or *S* || Causes txt2speech of string on bot. || <text of string to speak> || speak_complete | speak_error <error message> | speak_not_supported || || 1 ||
|| *WRITE_N*|| Set the value (high,low) of an I/O port. || <0 | 1> || write_N_complete | write_N_error <error message> | write_N_not_supported || N refers to a port number, index starting at 1, for instance WRITE_1 WRITE_2 || 1 ||
|| *READ_N*|| Read the current value of an I/O port. || None || read_N_complete <0|1> | read_N_error <error message> | read_N_not_supported || N refers to a port number, index starting at 1, for instance READ_1 or READ_2 || 1 ||
|| *PWM_N*|| Send a pulse width modulated signal to a port || <number of millisecons> || pwm_N_complete  | pwm_N_error <error message> | pwm_N_not_supported || N refers to a port number, index starting at 1, for instance PWM_1 or PWM_2 || 1 ||
|| *POSE* or *P* || Returns current pose of bot according to sensors. || None || pose_complete <x> <y> <yaw> | pose_error <error message> | pose_not_supported || <x> <y> values of pose are measured from last point <0,0> was initiated. <yaw> is specified as degrees from magnetic north. || 1 ||
|| *RESET* || Resets internal representation of x,y,yaw on bot. || <± x meters> <± y meters> <± degrees> || reset_complete | reset_error <error message> | reset_not_supported || || 1 ||
|| *VERSION* or *V* || Returns protocol version supported by bot. || None. || <version number> || Always supported. || 1 ||